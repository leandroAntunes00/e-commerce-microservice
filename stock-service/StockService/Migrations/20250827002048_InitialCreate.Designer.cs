// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StockService.Data;

#nullable disable

namespace StockService.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20250827002048_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StockService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Eletrônicos",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Smartphone de última geração com câmera de alta resolução",
                            ImageUrl = "https://example.com/images/galaxy-s23.jpg",
                            IsActive = true,
                            Name = "Smartphone Samsung Galaxy S23",
                            Price = 2999.99m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            Category = "Informática",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Notebook para trabalho e estudos com processador Intel i5",
                            ImageUrl = "https://example.com/images/dell-inspiron.jpg",
                            IsActive = true,
                            Name = "Notebook Dell Inspiron 15",
                            Price = 3999.99m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 3,
                            Category = "Áudio",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fone de ouvido wireless com cancelamento de ruído ativo",
                            ImageUrl = "https://example.com/images/sony-headphones.jpg",
                            IsActive = true,
                            Name = "Fone de Ouvido Bluetooth Sony",
                            Price = 599.99m,
                            StockQuantity = 100
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
